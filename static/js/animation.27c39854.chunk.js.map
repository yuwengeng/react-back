{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Animation/Animation.jsx","views/Others/Animation/index.js"],"names":["React","memo","props","style","marginBottom","Item","to","arr","map","res","key","path","title","nextProps","prevProps","join","CustomBreadcrumb","TabPane","typeIn","typeOut","typeOther","AnimationView","state","fontType","changeType","v","console","log","setState","className","gutter","marginTop","span","type","tabPosition","tab","i","size","onClick","bind","ghost","fontSize","textAlign","padding","this","Component"],"mappings":"4JAoCeA,UAAMC,MA/BI,SAAAC,GAAK,OAC1B,uBAAYC,MAAO,CAAEC,aAAc,KAC/B,sBAAYC,KAAZ,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,iBAEHJ,EAAMK,KACHL,EAAMK,IAAIC,KAAI,SAAAC,GACV,MAAmB,kBAARA,EAEH,sBAAYJ,KAAZ,CAAiBK,IAAKD,EAAIE,MACtB,kBAAC,IAAD,CAAML,GAAIG,EAAIE,MAAOF,EAAIG,QAI1B,sBAAYP,KAAZ,CAAiBK,IAAKD,GAAMA,UAUvD,SAAsBI,EAAWC,GAC7B,OAAID,EAAUN,IAAIQ,SAAWD,EAAUP,IAAIQ,UC5BhCC,O,oOCGPC,G,WAAAA,SACFC,EAAS,CACX,eACA,eACA,gBACA,aACA,SACA,aACA,aACA,gBACA,cACA,iBACA,WACA,cACA,UACA,UACA,YAEEC,EAAU,CACZ,YACA,gBACA,gBACA,iBACA,cACA,aACA,UACA,cACA,iBACA,cACA,iBACA,eACA,kBACA,YACA,eACA,aAEEC,EAAY,CACd,WACA,SACA,QACA,QACA,aACA,QACA,YACA,QACA,OACA,SACA,SA8EWC,E,2MA1EXC,MAAQ,CACJC,SAAU,0B,EAEdC,WAAa,SAAAC,GACTC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVL,SAAS,YAAD,OAAcE,M,wEAGpB,IAAD,OACL,OACI,uBAAQI,UAAU,mBACd,6BACI,kBAACb,EAAA,EAAD,CAAkBT,IAAK,CAAC,eAAM,mBAElC,yBAAKsB,UAAU,cACX,wDACA,4BACA,kGAEJ,uBAAKC,OAAQ,EAAG3B,MAAO,CAAE4B,UAAW,SAChC,uBAAKC,KAAM,IACP,uBAAMC,KAAK,OAAOC,YAAY,QAC1B,kBAACjB,EAAD,CAASkB,IAAI,eAAKzB,IAAI,KACjBQ,EAAOV,KAAI,SAACiB,EAAGW,GAAJ,OACR,uBACIH,KAAK,UACLI,KAAK,QACL3B,IAAK0B,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,OAIb,kBAACR,EAAD,CAASkB,IAAI,eAAKzB,IAAI,KACjBS,EAAQX,KAAI,SAACiB,EAAGW,GAAJ,OACT,uBACIH,KAAK,UACLI,KAAK,QACL3B,IAAK0B,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,OAIb,kBAACR,EAAD,CAASkB,IAAI,eAAKzB,IAAI,KACjBU,EAAUZ,KAAI,SAACiB,EAAGW,GAAJ,OACX,uBACIH,KAAK,UACLI,KAAK,QACL3B,IAAK0B,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,SAMrB,uBAAKO,KAAM,IACP,yBACI7B,MAAO,CAAEsC,SAAU,SAAUC,UAAW,SAAUC,QAAS,QAC3Dd,UAAWe,KAAKtB,MAAMC,UAF1B,sB,GA/DIsB,aCrDbxB","file":"static/js/animation.27c39854.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst CustomBreadcrumb = props => (\n    <Breadcrumb style={{ marginBottom: 16 }}>\n        <Breadcrumb.Item>\n            <Link to='/index'>首页</Link>\n        </Breadcrumb.Item>\n        {props.arr &&\n            props.arr.map(res => {\n                if (typeof res === 'object') {\n                    return (\n                        <Breadcrumb.Item key={res.path}>\n                            <Link to={res.path}>{res.title}</Link>\n                        </Breadcrumb.Item>\n                    )\n                } else {\n                    return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\n                }\n            })}\n    </Breadcrumb>\n)\n\nCustomBreadcrumb.propTypes = {\n    arr: PropTypes.array.isRequired\n}\n\nfunction shouldRender(nextProps, prevProps) {\n    if (nextProps.arr.join() === prevProps.arr.join()) {\n        return true\n    }\n    return false\n}\n\nexport default React.memo(CustomBreadcrumb, shouldRender)\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\n\nexport default CustomBreadcrumb\n","import React, { Component } from 'react'\nimport { Layout, Divider, Row, Col, Button, Tabs } from 'antd'\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\nimport '@/style/view-style/animation.scss'\n\nconst { TabPane } = Tabs\nconst typeIn = [\n    'bounceInDown',\n    'bounceInLeft',\n    'bounceInRight',\n    'bounceInUp',\n    'fadeIn',\n    'fadeInDown',\n    'fadeInLeft',\n    'fadeInLeftBig',\n    'fadeInRight',\n    'fadeInRightBig',\n    'fadeInUp',\n    'fadeInUpBig',\n    'flipInX',\n    'flipInY',\n    'rotateIn'\n]\nconst typeOut = [\n    'bounceOut',\n    'bounceOutDown',\n    'bounceOutLeft',\n    'bounceOutRight',\n    'bounceOutUp',\n    'fadeInDown',\n    'fadeOut',\n    'fadeOutDown',\n    'fadeOutDownBig',\n    'fadeOutLeft',\n    'fadeOutLeftBig',\n    'fadeOutRight',\n    'fadeOutRightBig',\n    'fadeOutUp',\n    'fadeOutUpBig',\n    'rotateOut'\n]\nconst typeOther = [\n    'bounceIn',\n    'bounce',\n    'flash',\n    'pulse',\n    'rubberBand',\n    'shake',\n    'headShake',\n    'swing',\n    'tada',\n    'wobble',\n    'jello'\n]\n\nclass AnimationView extends Component {\n    state = {\n        fontType: 'animated bounceInRight'\n    }\n    changeType = v => {\n        console.log(v)\n        this.setState({\n            fontType: `animated ${v}`\n        })\n    }\n    render() {\n        return (\n            <Layout className='animated fadeIn'>\n                <div>\n                    <CustomBreadcrumb arr={['其他', '动画']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <Divider />\n                    <p>当页面需要动态效果时。</p>\n                </div>\n                <Row gutter={8} style={{ marginTop: '3rem' }}>\n                    <Col span={10}>\n                        <Tabs type='card' tabPosition='left'>\n                            <TabPane tab='进场' key='1'>\n                                {typeIn.map((v, i) => (\n                                    <Button\n                                        type='primary'\n                                        size='small'\n                                        key={i}\n                                        onClick={this.changeType.bind(this, v)}\n                                        ghost>\n                                        {v}\n                                    </Button>\n                                ))}\n                            </TabPane>\n                            <TabPane tab='退场' key='2'>\n                                {typeOut.map((v, i) => (\n                                    <Button\n                                        type='primary'\n                                        size='small'\n                                        key={i}\n                                        onClick={this.changeType.bind(this, v)}\n                                        ghost>\n                                        {v}\n                                    </Button>\n                                ))}\n                            </TabPane>\n                            <TabPane tab='其它' key='3'>\n                                {typeOther.map((v, i) => (\n                                    <Button\n                                        type='primary'\n                                        size='small'\n                                        key={i}\n                                        onClick={this.changeType.bind(this, v)}\n                                        ghost>\n                                        {v}\n                                    </Button>\n                                ))}\n                            </TabPane>\n                        </Tabs>\n                    </Col>\n                    <Col span={14}>\n                        <div\n                            style={{ fontSize: '4.8rem', textAlign: 'center', padding: '2rem' }}\n                            className={this.state.fontType}>\n                            Animate.css\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nexport default AnimationView\n","import AnimationView from './Animation.jsx'\n\nexport default AnimationView\n"],"sourceRoot":""}