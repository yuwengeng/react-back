{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Upload/Upload.jsx","views/Others/Upload/index.js"],"names":["React","memo","props","style","marginBottom","Item","to","arr","map","res","key","path","title","nextProps","prevProps","join","CustomBreadcrumb","Dragger","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","getBase_64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","beforeUpload","isJpgOrPng","type","isLt2M","size","UploadView","state","loading","previewVisible","previewImage","imageUrl","uid","url","handleChange","setState","img","callback","addEventListener","getBase64","originFileObj","handleCancel","handlePreview","a","preview","handle_Change","uploadButton","this","className","gutter","span","orientation","listType","onPreview","length","visible","footer","onCancel","alt","width","src","showUploadList","Component"],"mappings":"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","file":"static/js/upload.ae173da6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst CustomBreadcrumb = props => (\n    <Breadcrumb style={{ marginBottom: 16 }}>\n        <Breadcrumb.Item>\n            <Link to='/index'>首页</Link>\n        </Breadcrumb.Item>\n        {props.arr &&\n            props.arr.map(res => {\n                if (typeof res === 'object') {\n                    return (\n                        <Breadcrumb.Item key={res.path}>\n                            <Link to={res.path}>{res.title}</Link>\n                        </Breadcrumb.Item>\n                    )\n                } else {\n                    return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\n                }\n            })}\n    </Breadcrumb>\n)\n\nCustomBreadcrumb.propTypes = {\n    arr: PropTypes.array.isRequired\n}\n\nfunction shouldRender(nextProps, prevProps) {\n    if (nextProps.arr.join() === prevProps.arr.join()) {\n        return true\n    }\n    return false\n}\n\nexport default React.memo(CustomBreadcrumb, shouldRender)\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\n\nexport default CustomBreadcrumb\n","import React, { Component } from 'react'\nimport { Layout, Row, Col, Upload, message, Button, Icon, Divider, Modal } from 'antd'\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\n\nconst { Dragger } = Upload\n\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text'\n    },\n    onChange(info) {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList)\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`)\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`)\n        }\n    }\n}\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => callback(reader.result))\n    reader.readAsDataURL(img)\n}\n\nfunction getBase_64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = error => reject(error)\n    })\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!')\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!')\n    }\n    return isJpgOrPng && isLt2M\n}\n\nclass UploadView extends Component {\n    state = {\n        loading: false,\n        previewVisible: false,\n        previewImage: '',\n        imageUrl: '',\n        fileList: [\n            {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-2',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-3',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-4',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            },\n            {\n                uid: '-5',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            }\n        ]\n    }\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true })\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false\n                })\n            )\n        }\n    }\n\n    handleCancel = () => this.setState({ previewVisible: false })\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase_64(file.originFileObj)\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true\n        })\n    }\n    handle_Change = ({ fileList }) => this.setState({ fileList })\n\n    render() {\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className='ant-upload-text'>Upload</div>\n            </div>\n        )\n        const { imageUrl, previewVisible, previewImage, fileList } = this.state\n        return (\n            <Layout>\n                <div>\n                    <CustomBreadcrumb arr={['其它', '上传']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程</p>\n                </div>\n                <Row gutter={8}>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>普通模式</Divider>\n                            <Upload {...props}>\n                                <Button>\n                                    <Icon type='upload' /> Click to Upload\n                                </Button>\n                            </Upload>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>照片墙</Divider>\n                            <div className='clearfix'>\n                                <Upload\n                                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                    listType='picture-card'\n                                    fileList={fileList}\n                                    onPreview={this.handlePreview}\n                                    onChange={this.handle_Change}>\n                                    {fileList.length >= 8 ? null : uploadButton}\n                                </Upload>\n                                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                                    <img alt='example' style={{ width: '100%' }} src={previewImage} />\n                                </Modal>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>自定义模式</Divider>\n                            <Upload\n                                name='avatar'\n                                listType='picture-card'\n                                className='avatar-uploader'\n                                showUploadList={false}\n                                action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                beforeUpload={beforeUpload}\n                                onChange={this.handleChange}>\n                                {imageUrl ? (\n                                    <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\n                                ) : (\n                                    uploadButton\n                                )}\n                            </Upload>\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>可拖拽上传</Divider>\n                            <Dragger {...props}>\n                                <p className='ant-upload-drag-icon'>\n                                    <Icon type='inbox' />\n                                </p>\n                                <p className='ant-upload-text'>Click or drag file to this area to upload</p>\n                                <p className='ant-upload-hint'>\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data\n                                    or other band files\n                                </p>\n                            </Dragger>\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nexport default UploadView\n","import UploadView from './Upload.jsx'\n\nexport default UploadView\n"],"sourceRoot":""}