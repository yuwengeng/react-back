{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Progress/Progress.jsx","views/Others/Progress/index.js"],"names":["React","memo","props","style","marginBottom","Item","to","arr","map","res","key","path","title","nextProps","prevProps","join","CustomBreadcrumb","ButtonGroup","Group","DrawerView","state","percent","increase","setState","decline","className","gutter","span","orientation","status","size","showInfo","type","this","onClick","icon","width","format","Component","ProgressView"],"mappings":"4JAoCeA,UAAMC,MA/BI,SAAAC,GAAK,OAC1B,uBAAYC,MAAO,CAAEC,aAAc,KAC/B,sBAAYC,KAAZ,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,iBAEHJ,EAAMK,KACHL,EAAMK,IAAIC,KAAI,SAAAC,GACV,MAAmB,kBAARA,EAEH,sBAAYJ,KAAZ,CAAiBK,IAAKD,EAAIE,MACtB,kBAAC,IAAD,CAAML,GAAIG,EAAIE,MAAOF,EAAIG,QAI1B,sBAAYP,KAAZ,CAAiBK,IAAKD,GAAMA,UAUvD,SAAsBI,EAAWC,GAC7B,OAAID,EAAUN,IAAIQ,SAAWD,EAAUP,IAAIQ,UC5BhCC,O,oOCGTC,G,OAAc,IAAOC,OAuEZC,E,2MApEXC,MAAQ,CACJC,QAAS,G,EAGbC,SAAW,WACP,IAAID,EAAU,EAAKD,MAAMC,QAAU,GAC/BA,EAAU,MACVA,EAAU,KAEd,EAAKE,SAAS,CAAEF,a,EAGpBG,QAAU,WACN,IAAIH,EAAU,EAAKD,MAAMC,QAAU,GAC/BA,EAAU,IACVA,EAAU,GAEd,EAAKE,SAAS,CAAEF,a,wEAIhB,OACI,uBAAQI,UAAU,4BACd,6BACI,kBAACT,EAAA,EAAD,CAAkBT,IAAK,CAAC,eAAM,yBAElC,yBAAKkB,UAAU,cACX,wDACA,gOAEJ,uBAAKC,OAAQ,GACT,uBAAKC,KAAM,IACP,yBAAKF,UAAU,cACX,uBAASG,YAAY,QAArB,gBACA,uBAAUP,QAAS,KACnB,uBAAUA,QAAS,GAAIQ,OAAO,WAC9B,uBAAUR,QAAS,GAAIQ,OAAO,cAC9B,uBAAUR,QAAS,IAAKS,KAAK,UAC7B,uBAAUT,QAAS,GAAIU,UAAU,EAAOD,KAAK,WAEjD,yBAAKL,UAAU,cACX,uBAASG,YAAY,QAArB,kCACA,uBAAUI,KAAK,SAASX,QAASY,KAAKb,MAAMC,UAC5C,kBAACJ,EAAD,KACI,uBAAQiB,QAASD,KAAKT,QAASW,KAAK,UACpC,uBAAQD,QAASD,KAAKX,SAAUa,KAAK,YAIjD,uBAAKR,KAAM,IACP,yBAAKF,UAAU,cACX,uBAASG,YAAY,QAArB,gBACA,uBAAUI,KAAK,SAASX,QAAS,KACjC,uBAAUW,KAAK,SAASX,QAAS,GAAIQ,OAAO,cAC5C,uBAAUG,KAAK,SAASX,QAAS,IAAKe,MAAO,MAEjD,yBAAKX,UAAU,cACX,uBAASG,YAAY,QAArB,kCACA,uBAAUI,KAAK,SAASX,QAAS,GAAIgB,OAAQ,SAAAhB,GAAO,gBAAOA,EAAP,YACpD,uBAAUW,KAAK,SAASX,QAAS,IAAKgB,OAAQ,iBAAM,kB,GA5DvDC,aCLVC","file":"static/js/progress.01cd1b42.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst CustomBreadcrumb = props => (\n    <Breadcrumb style={{ marginBottom: 16 }}>\n        <Breadcrumb.Item>\n            <Link to='/index'>首页</Link>\n        </Breadcrumb.Item>\n        {props.arr &&\n            props.arr.map(res => {\n                if (typeof res === 'object') {\n                    return (\n                        <Breadcrumb.Item key={res.path}>\n                            <Link to={res.path}>{res.title}</Link>\n                        </Breadcrumb.Item>\n                    )\n                } else {\n                    return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\n                }\n            })}\n    </Breadcrumb>\n)\n\nCustomBreadcrumb.propTypes = {\n    arr: PropTypes.array.isRequired\n}\n\nfunction shouldRender(nextProps, prevProps) {\n    if (nextProps.arr.join() === prevProps.arr.join()) {\n        return true\n    }\n    return false\n}\n\nexport default React.memo(CustomBreadcrumb, shouldRender)\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\n\nexport default CustomBreadcrumb\n","import React, { Component } from 'react'\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\nimport { Layout, Row, Col, Progress, Divider, Button } from 'antd'\nimport '@/style/view-style/progress.scss'\n\nconst ButtonGroup = Button.Group\n\nclass DrawerView extends Component {\n    state = {\n        percent: 0\n    }\n\n    increase = () => {\n        let percent = this.state.percent + 10\n        if (percent > 100) {\n            percent = 100\n        }\n        this.setState({ percent })\n    }\n\n    decline = () => {\n        let percent = this.state.percent - 10\n        if (percent < 0) {\n            percent = 0\n        }\n        this.setState({ percent })\n    }\n\n    render() {\n        return (\n            <Layout className='progress animated fadeIn'>\n                <div>\n                    <CustomBreadcrumb arr={['其他', '进度条']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <p>在操作需要较长时间才能完成时，为用户显示该操作的当前进度和状态。</p>\n                </div>\n                <Row gutter={8}>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>基本</Divider>\n                            <Progress percent={30} />\n                            <Progress percent={50} status='active' />\n                            <Progress percent={70} status='exception' />\n                            <Progress percent={100} size='small' />\n                            <Progress percent={50} showInfo={false} size='small' />\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>动态进度条</Divider>\n                            <Progress type='circle' percent={this.state.percent} />\n                            <ButtonGroup>\n                                <Button onClick={this.decline} icon='minus' />\n                                <Button onClick={this.increase} icon='plus' />\n                            </ButtonGroup>\n                        </div>\n                    </Col>\n                    <Col span={12}>\n                        <div className='base-style'>\n                            <Divider orientation='left'>圆环</Divider>\n                            <Progress type='circle' percent={75} />\n                            <Progress type='circle' percent={70} status='exception' />\n                            <Progress type='circle' percent={100} width={80} />\n                        </div>\n                        <div className='base-style'>\n                            <Divider orientation='left'>自定义文字</Divider>\n                            <Progress type='circle' percent={75} format={percent => `${percent} Days`} />\n                            <Progress type='circle' percent={100} format={() => 'Done'} />\n                        </div>\n                    </Col>\n                </Row>\n            </Layout>\n        )\n    }\n}\n\nexport default DrawerView\n","import ProgressView from './Progress.jsx'\n\nexport default ProgressView\n"],"sourceRoot":""}