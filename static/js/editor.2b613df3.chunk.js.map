{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Editor/Editor.jsx","views/Others/Editor/index.js"],"names":["React","memo","props","style","marginBottom","Item","to","arr","map","res","key","path","title","nextProps","prevProps","join","CustomBreadcrumb","EditorView","state","editorState","BraftEditor","createEditorState","outputHTML","handleEditorChange","setState","toHTML","setEditorContentAsync","isLiving","this","setTimeout","className","href","value","onChange","Component"],"mappings":"4JAoCeA,UAAMC,MA/BI,SAAAC,GAAK,OAC1B,uBAAYC,MAAO,CAAEC,aAAc,KAC/B,sBAAYC,KAAZ,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,iBAEHJ,EAAMK,KACHL,EAAMK,IAAIC,KAAI,SAAAC,GACV,MAAmB,kBAARA,EAEH,sBAAYJ,KAAZ,CAAiBK,IAAKD,EAAIE,MACtB,kBAAC,IAAD,CAAML,GAAIG,EAAIE,MAAOF,EAAIG,QAI1B,sBAAYP,KAAZ,CAAiBK,IAAKD,GAAMA,UAUvD,SAAsBI,EAAWC,GAC7B,OAAID,EAAUN,IAAIQ,SAAWD,EAAUP,IAAIQ,UC5BhCC,O,2LC+DAC,G,kNAzDXC,MAAQ,CACJC,YAAaC,IAAYC,kBAAkB,4CAC3CC,WAAY,4C,EAYhBC,mBAAqB,SAAAJ,GACjB,EAAKK,SAAS,CACVL,YAAaA,EACbG,WAAYH,EAAYM,Y,EAIhCC,sBAAwB,WACpB,EAAKC,UACD,EAAKH,SAAS,CACVL,YAAaC,IAAYC,kBAAkB,kH,mFAlBnDO,KAAKD,UAAW,EAChBE,WAAWD,KAAKF,sBAAuB,O,6CAIvCE,KAAKD,UAAW,I,+BAiBV,IAAD,EAC+BC,KAAKV,MAAjCC,EADH,EACGA,YAAaG,EADhB,EACgBA,WACrB,OACI,uBAAQQ,UAAU,mBACd,6BACI,kBAACd,EAAA,EAAD,CAAkBT,IAAK,CAAC,eAAM,yBAElC,yBAAKuB,UAAU,cACX,wDACA,4BACA,0LAEI,uBAAGC,KAAK,0CAAR,kBAGR,yBAAKD,UAAU,cACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAaE,MAAOb,EAAac,SAAUL,KAAKL,uBAGxD,yBAAKO,UAAU,cACX,wDACA,yBAAKA,UAAU,kBAAkBR,S,GAnD5BY,cCLVjB","file":"static/js/editor.2b613df3.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst CustomBreadcrumb = props => (\n    <Breadcrumb style={{ marginBottom: 16 }}>\n        <Breadcrumb.Item>\n            <Link to='/index'>首页</Link>\n        </Breadcrumb.Item>\n        {props.arr &&\n            props.arr.map(res => {\n                if (typeof res === 'object') {\n                    return (\n                        <Breadcrumb.Item key={res.path}>\n                            <Link to={res.path}>{res.title}</Link>\n                        </Breadcrumb.Item>\n                    )\n                } else {\n                    return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\n                }\n            })}\n    </Breadcrumb>\n)\n\nCustomBreadcrumb.propTypes = {\n    arr: PropTypes.array.isRequired\n}\n\nfunction shouldRender(nextProps, prevProps) {\n    if (nextProps.arr.join() === prevProps.arr.join()) {\n        return true\n    }\n    return false\n}\n\nexport default React.memo(CustomBreadcrumb, shouldRender)\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\n\nexport default CustomBreadcrumb\n","import React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\nimport { Layout, Divider } from 'antd'\nimport '@/style/view-style/editor.scss'\n\nclass EditorView extends Component {\n    state = {\n        editorState: BraftEditor.createEditorState('<p>你好 <b>世界!</b></p>'),\n        outputHTML: '<p>你好 <b>世界!</b></p>'\n    }\n\n    componentDidMount() {\n        this.isLiving = true\n        setTimeout(this.setEditorContentAsync, 3000)\n    }\n\n    componentWillUnmount() {\n        this.isLiving = false\n    }\n\n    handleEditorChange = editorState => {\n        this.setState({\n            editorState: editorState,\n            outputHTML: editorState.toHTML()\n        })\n    }\n\n    setEditorContentAsync = () => {\n        this.isLiving &&\n            this.setState({\n                editorState: BraftEditor.createEditorState('你好,<b>可爱的人! 很幸运在这里与你相遇!</b>')\n            })\n    }\n\n    render() {\n        const { editorState, outputHTML } = this.state\n        return (\n            <Layout className='animated fadeIn'>\n                <div>\n                    <CustomBreadcrumb arr={['其他', '富文本']}></CustomBreadcrumb>\n                </div>\n                <div className='base-style'>\n                    <h3>何时使用</h3>\n                    <Divider />\n                    <p>\n                        当用户需要一些特定输入时，此页面使用的富文本编辑器是\n                        <a href='https://github.com/margox/braft-editor'>braft-editor</a>\n                    </p>\n                </div>\n                <div className='base-style'>\n                    <div className='editor'>\n                        <BraftEditor value={editorState} onChange={this.handleEditorChange} />\n                    </div>\n                </div>\n                <div className='base-style'>\n                    <h5>输出内容</h5>\n                    <div className='output-content'>{outputHTML}</div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default EditorView\n","import EditorView from './Editor.jsx'\n\nexport default EditorView\n"],"sourceRoot":""}